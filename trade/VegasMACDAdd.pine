//@version=5
strategy("VegasMACDAdd", overlay=true,  pyramiding=1, default_qty_type=strategy.percent_of_equity,process_orders_on_close=true ,default_qty_value=10,commission_value=0.05,initial_capital=1000)

startYear = input(2023, "Start Year")
startMonth = input(3, "Start Month")
startDay = input(15, "Start Day")//50
endYear = year(timenow)
endMonth = month(timenow)
endDay = dayofmonth(timenow)
startTime = timestamp(startYear, startMonth, startDay, 00, 00)
endTime = timestamp(endYear, endMonth, endDay, 23, 59)
timelock = input(bool(0) ,"Time lock")

// 判斷當前條是否在指定的時間範圍內
inDateRange = time >= startTime and time <= endTime or (not timelock) 

PMA12 = input.source(close, title="PMA12")
PMA144 = input.source(close, title="PMA144")
PMA169 = input.source(close, title="PMA169")
PMA576 = input.source(close, title="PMA576")
PMA676 = input.source(close, title="PMA676")

MACD = input.source(close, title="MACD")
MACDsignal = input.source(close, title="MACDsignal")





var prev_PMA12 = 0.0
var prev_PMA144 = 0.0
var prev_PMA169 = 0.0
var prev_PMA576 = 0.0
var prev_PMA676 = 0.0

PMA12diff = PMA12 - prev_PMA12 //Differentia
PMA144diff = PMA144 - prev_PMA144
PMA169diff = PMA169 - prev_PMA169
PMA576diff = PMA576 - prev_PMA576
PMA676diff = PMA676 - prev_PMA676

prev_PMA12 := PMA12
prev_PMA144 := PMA144
prev_PMA169 := PMA169
prev_PMA576 := PMA576
prev_PMA676 := PMA676

MACD_Signal = MACD - MACDsignal


//Finite State Machine
var state = 0// 0 等待 1 Left long 2 right long 3 left take profit -1 left short -2 right short -3 right take profit


// 進場條件
// long condition
long_Left_Arrangement() =>
    conditionClose = close>PMA12 and close >676 and close >576 and math.max(PMA144,PMA169)<math.min(PMA576,PMA676)
    conditionDiff = PMA12diff>0 and PMA144diff>0 and PMA169diff>0 and PMA576diff>0 and PMA676diff>0
    long_LA = conditionClose and conditionDiff and MACD_Signal>0
    [long_LA]

long_Right_Arrangement() =>
    conditionClose = close>PMA12 and close >PMA144 and close >PMA169 and close >PMA576 and close >PMA676 and math.min(PMA144,PMA169)>math.max(PMA576,PMA676)
    conditionDiff = PMA144diff>0 and PMA169diff>0 and PMA576diff>0 and PMA676diff>0
    long_RA = conditionClose and conditionDiff and MACD_Signal>0
    [long_RA]

long_Left_Take_Profit() =>
    conditionClose = close < PMA12 
    long_LLP = conditionClose and MACD_Signal<0
    [long_LLP]

long_Close_Condition() =>
    conditionClose = close<PMA144 and close <PMA169
    long_CC = MACD_Signal<0 and conditionClose
    [long_CC]

// short condition
short_Left_Arrangement() =>
    conditionClose = close<PMA12 and close <676 and close <576 and math.min(PMA144,PMA169)>math.max(PMA576,PMA676)
    conditionDiff = PMA12diff<0 and PMA144diff<0 and PMA169diff<0 and PMA576diff<0 and PMA676diff<0
    short_LA = conditionClose and conditionDiff and MACD_Signal<0
    [short_LA]

short_Right_Arrangement() =>
    conditionClose = close<PMA12 and close <PMA144 and close <PMA169 and close <PMA576 and close <PMA676 and math.max(PMA144,PMA169)<math.min(PMA576,PMA676)
    conditionDiff = PMA144diff<0 and PMA169diff<0 and PMA576diff<0 and PMA676diff<0
    short_RA = conditionClose and conditionDiff and MACD_Signal<0
    [short_RA]

short_Left_Take_Profit() =>
    conditionClose = close > PMA12 
    short_LLP = conditionClose and MACD_Signal>0
    [short_LLP]

short_Close_Condition() =>
    conditionClose = close>PMA144 and close >PMA169
    short_CC = MACD_Signal>0 and conditionClose
    [short_CC]
    

leverage = input(1, "Leverage")

leftTakeProfitPercent = input(50, "Left Take Profit Percent%")


[longLeftArrangement] = long_Left_Arrangement()
[longRightArrangement] = long_Right_Arrangement()
[longLeftTakeProfit] = long_Left_Take_Profit()
[longCloseCondition] = long_Close_Condition()
[shortLeftArrangement] = short_Left_Arrangement()
[shortRightArrangement] = short_Right_Arrangement()
[shortLeftTakeProfit] = short_Left_Take_Profit()
[shortCloseCondition] = short_Close_Condition()         

if (inDateRange)
    switch state
        0 =>
            if longLeftArrangement
                strategy.entry("Left Long", strategy.long)
                state := 1
            if(longRightArrangement)
                strategy.entry("Right Long", strategy.long)
                state := 2
            if shortLeftArrangement
                strategy.entry("Left Short", strategy.short)
                state := -1
            if shortRightArrangement
                strategy.entry("Right Short", strategy.short)
                state := -2
        1 =>
            if longLeftTakeProfit
                strategy.close("Left Long", qty_percent=leftTakeProfitPercent, comment="state 1 Left Take Profit")
                state := 3
            if longRightArrangement
                strategy.entry("Right Long", strategy.long)
                state := 2
            if longCloseCondition
                strategy.close("Left Long", qty_percent=100, comment="Close Left All Long")
                state := 0
        2 =>
            // if longLeftTakeProfit
            //     strategy.close("Right Long", qty_percent=leftTakeProfitPercent, comment="state 2 Left Take Profit")
            //     state := 3
            if longCloseCondition
                strategy.close("Right Long", qty_percent=100, comment="Close Right ALL Long")
                state := 0
        3 =>
            if longRightArrangement
                strategy.entry("Right Long", strategy.long)
                state := 2
            if longCloseCondition
                strategy.close("Left Long", qty_percent=100, comment="Close ALL Long")
                state := 0
        -1 =>
            if shortLeftTakeProfit
                strategy.close("Left Short", qty_percent=leftTakeProfitPercent, comment="state -1 Left Take Profit")
                state := -3
            if shortRightArrangement
                strategy.entry("Right Short", strategy.short)
                state := -2
            if shortCloseCondition
                strategy.close("Left Short", qty_percent=100, comment="Close Left ALL Short")
                state := 0
        -2 =>
            // if shortLeftTakeProfit
            //     strategy.close("Right Short", qty_percent=leftTakeProfitPercent, comment="state -2 Left Take Profit")
            //     state := -3
            if shortCloseCondition
                strategy.close("Right Short", qty_percent=100, comment="Close Right ALL Short")
                state := 0
        -3 =>
            if shortRightArrangement
                strategy.entry("Right Short", strategy.short)
                state := -2
            if shortCloseCondition
                strategy.close("Left Short", qty_percent=100, comment="Close ALL Short")
                state := 0
        

plot (state, title="State", color=color.red, linewidth=2, style=plot.style_histogram)