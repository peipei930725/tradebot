//@version=5
strategy("MoboMacd", overlay=true,  pyramiding=1, default_qty_type=strategy.percent_of_equity,process_orders_on_close=true ,default_qty_value=10,commission_value=0.05,initial_capital=1000)

startYear = input(2023, "Start Year")
startMonth = input(3, "Start Month")
startDay = input(15, "Start Day")//50
endYear = year(timenow)
endMonth = month(timenow)
endDay = dayofmonth(timenow)
startTime = timestamp(startYear, startMonth, startDay, 00, 00)
endTime = timestamp(endYear, endMonth, endDay, 23, 59)
timelock = input(bool(0) ,"Time lock")

// 判斷當前條是否在指定的時間範圍內
inDateRange = time >= startTime and time <= endTime or (not timelock) 

ATRShortStopLoss = input.source(close, title="ATRShortStopLoss")
ATRLongStopLoss = input.source(close, title="ATR Long Stop Loss")



MoboBuy = input.source(close, title="MoboBuy Arrow")
MoboSell = input.source(close, title="MoboSell Arrow")

MACD = input.source(close, title="MACD")
MACDsignal = input.source(close, title="MACDsignal")
MACDcross = input.source(close, title="MACDcross")


var takePrice = 0.0
var stopPrice = 0.0
var moveStopPrice = 0.0
var stopPriceUnit = 0.0

var pev_MoboBuy = 0.0
var pev_MoboSell = 0.0

longcondition = MACD > MACDsignal and not na(MACDcross) and (not na(MoboBuy) or not na(pev_MoboBuy))
shortcondition = MACD < MACDsignal and not na(MACDcross) and (not na(MoboSell) or not na(pev_MoboSell))



pev_MoboBuy := MoboBuy
pev_MoboSell := MoboSell


takeProfitPercent = input(50.0, title="Take Profit Percent")
WLRatio = input(1.5, title="Win/Loss Ratio take profit")
KellyEnable = input(false, title="Kelly Enable")
//Kelly_Formula
winRate = input(50.0, title="Win Rate")/100
kelly_formula(winRate,profitRatio, winlossratio) =>
    f = winRate/profitRatio - (1-winRate)/winlossratio
    if(f<0)
        f:=0
    if(KellyEnable)
        f/100
    else
        strategy.default_entry_qty(close)
        
    




var mealymoodle = 0 // 0: none, 1: long, 2: long Take Profit, 3: move stop loss, -1: short, -2: short Take Profit, -3: move stop loss

if (inDateRange and strategy.equity > 0)
    switch(mealymoodle)
        0 =>
            takePrice := na
            stopPrice := na
            moveStopPrice := na
            strategy.close("Long")
            strategy.close("Short")
            if (longcondition)
                strategy.entry("Long", strategy.long, qty=strategy.equity*kelly_formula(winRate, takePrice/close-1, 1-stopPrice/close))
                mealymoodle := 1
                stopPrice := ATRLongStopLoss
                stopPriceUnit := close - ATRLongStopLoss
                takePrice := close + stopPriceUnit * WLRatio
                moveStopPrice := close + stopPriceUnit * 2
            if (shortcondition)
                strategy.entry("Short", strategy.short, qty=strategy.equity*kelly_formula(winRate, 1-takePrice/close, stopPrice/close-1))
                mealymoodle := -1
                stopPrice := ATRShortStopLoss
                stopPriceUnit := ATRShortStopLoss - close
                takePrice := close - stopPriceUnit * WLRatio
                moveStopPrice := close - stopPriceUnit * 2
        1 => 
            strategy.exit("Take Profit", from_entry="Long", limit=takePrice, qty_percent= takeProfitPercent)
            strategy.exit("Stop Loss", from_entry="Long", limit=stopPrice)
            if high > moveStopPrice
                stopPrice := moveStopPrice - stopPriceUnit
                moveStopPrice := moveStopPrice + stopPriceUnit
                mealymoodle := 3
            if high > takePrice
                mealymoodle := 2
            if low < stopPrice
                strategy.close("Long")
                mealymoodle := 0
            if (shortcondition)
                strategy.close("Long")
                mealymoodle := -1
        2 => 
            strategy.exit("Stop Loss", from_entry="Long", limit=stopPrice)
            if high > moveStopPrice
                stopPrice := moveStopPrice - stopPriceUnit
                moveStopPrice := moveStopPrice + stopPriceUnit
                mealymoodle := 3
            if low < stopPrice
                strategy.close("Long")
                mealymoodle := 0
            if (shortcondition)
                strategy.close("Long")
                mealymoodle := -1
        3 =>
            strategy.exit("Stop Loss", from_entry="Long", limit=stopPrice)
            if high > moveStopPrice
                stopPrice := moveStopPrice - stopPriceUnit
                moveStopPrice := moveStopPrice + stopPriceUnit
                mealymoodle := 3
            if low < stopPrice
                strategy.close("Long")
                mealymoodle := 0
            if (shortcondition)
                strategy.close("Long")
                mealymoodle := -1
        -1 =>
            strategy.exit("Take Profit", from_entry="Short", limit=takePrice,  qty_percent= takeProfitPercent)
            strategy.exit("Stop Loss", from_entry="Short", limit=stopPrice)
            if low < moveStopPrice
                stopPrice := moveStopPrice + stopPriceUnit
                moveStopPrice := moveStopPrice - stopPriceUnit
                mealymoodle := -3
            if low < takePrice
                mealymoodle := -2
            if high > stopPrice
                strategy.close("Short")
                mealymoodle := 0
            if (longcondition)
                strategy.close("Short")
                mealymoodle := 1
        -2 =>
            strategy.exit("Stop Loss", from_entry="Short", limit=stopPrice)
            if low < moveStopPrice
                stopPrice := moveStopPrice + stopPriceUnit
                moveStopPrice := moveStopPrice - stopPriceUnit
                mealymoodle := -3
            if high > stopPrice
                strategy.close("Short")
                mealymoodle := 0
            if (longcondition)
                strategy.close("Short")
                mealymoodle := 1
        -3 =>
            strategy.exit("Stop Loss", from_entry="Long", limit=stopPrice)
            if low < moveStopPrice
                stopPrice := moveStopPrice + stopPriceUnit
                moveStopPrice := moveStopPrice - stopPriceUnit
                mealymoodle := -3
            if high > stopPrice
                strategy.close("Short")
                mealymoodle := 0
            if (longcondition)
                strategy.close("Short")
                mealymoodle := 1

            


plot(na(takePrice)? na: takePrice, color=color.green, title="Take Price", style=plot.style_linebr)
plot(na(stopPrice)? na: stopPrice, color=color.red, title="Stop Price", style=plot.style_linebr)
plot(na(moveStopPrice)? na: moveStopPrice, color=color.blue, title="Move Stop Price", style=plot.style_linebr)

