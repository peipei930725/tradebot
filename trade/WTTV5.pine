// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © M0rty

//@version=5

////////////////////////////////////////////////////////////////
// 
// WTT Volume Trend by Morty
//
// Inspired by Natural Trading Theory
//
//--------------------------------------------------------------
// Version 1.1, Updated at 20210409
//
// Add feature:
// - Highlight large volume
//
//--------------------------------------------------------------
// Version 1.0, Updated at 20210327
//
// Features: 
// - Colored volume bars (Optional)
// - Weighted Bullish volume SMA trend lines according to candlestick pattern
// - Weighted Bearish volume SMA trend lines according to candlestick pattern
// - Adjustable volume SMA length
// - Adjustable weighting factors
// - Filling the background between volume SMA trend lines
//
////////////////////////////////////////////////////////////////

indicator(title='WTT Volume Trend [Morty]', shorttitle='Vol Trend [Morty]', format=format.volume, timeframe='')


// inputs
showVolume = input.bool(true, 'Show Volume Bars', group='Volume Bars')
showColor = input.bool(true, 'Coloring Volume Bars', group='Volume Bars')

showTrend = input.bool(true, 'Show Volume Trend', group='Volume Trend')
trend_ma_length = input.int(5, 'Volume Trend SMA length', group='Volume Trend')

strong_volume_weighting_factor = input.float(0.8, 'Strong volume weighting factor', minval=0.0, maxval=1.0, step=0.1, group='Volume Trend weighting factor')
weak_volume_weighting_factor = input.float(0.4, 'Weak volume weighting factor', minval=0.0, maxval=1.0, step=0.1, group='Volume Trend weighting factor')
neutral_volume_weighting_factor = 1

// candlestick pattern variables
C_Len = 10  // ema depth for bodyAvg
C_ShadowPercent = 5.0  // size of shadows
C_ShadowEqualsPercent = 100.0
C_DojiBodyPercent = 8.5
C_Factor = 2.0  // shows the number of times the shadow dominates the candlestick body

C_BodyHi = math.max(close, open)
C_BodyLo = math.min(close, open)
C_Body = C_BodyHi - C_BodyLo
C_BodyAvg = ta.ema(C_Body, C_Len)
C_SmallBody = C_Body < C_BodyAvg
C_LongBody = C_Body > C_BodyAvg
C_UpShadow = high - C_BodyHi
C_DnShadow = C_BodyLo - low
C_HasUpShadow = C_UpShadow > C_ShadowPercent / 100 * C_Body
C_HasDnShadow = C_DnShadow > C_ShadowPercent / 100 * C_Body
C_WhiteBody = open < close
C_BlackBody = open > close
C_Range = high - low
C_IsInsideBar = C_BodyHi[1] > C_BodyHi and C_BodyLo[1] < C_BodyLo
C_BodyMiddle = C_Body / 2 + C_BodyLo
C_ShadowEquals = C_UpShadow == C_DnShadow or math.abs(C_UpShadow - C_DnShadow) / C_DnShadow * 100 < C_ShadowEqualsPercent and math.abs(C_DnShadow - C_UpShadow) / C_UpShadow * 100 < C_ShadowEqualsPercent
C_IsDojiBody = C_Range > 0 and C_Body <= C_Range * C_DojiBodyPercent / 100
C_Doji = C_IsDojiBody and C_ShadowEquals



// candlestick pattern recognition

// Neutral Doji
C_DragonflyDoji = C_IsDojiBody and C_UpShadow <= C_Body
C_GravestoneDojiOne = C_IsDojiBody and C_DnShadow <= C_Body
is_Doji = C_Doji and not C_DragonflyDoji and not C_GravestoneDojiOne

// LongLowerShadowInput
C_LongLowerShadowPercent = 55.0
C_LongLowerShadowBullish = C_DnShadow > C_Range / 100 * C_LongLowerShadowPercent

// LongUpperShadowInput
C_LongShadowPercent = 55.0
C_LongUpperShadowBearish = C_UpShadow > C_Range / 100 * C_LongShadowPercent

// Bullish
is_Bullish_strong = C_WhiteBody and (C_LongLowerShadowBullish or C_LongBody)
is_Bullish_weak = C_LongLowerShadowBullish or C_WhiteBody and (C_Body >= 0.45 * C_UpShadow or C_Body <= 0.55 * C_UpShadow)
// Bearish
is_Bearish_strong = C_BlackBody and (C_LongUpperShadowBearish or C_LongBody)
is_Bearish_weak = C_LongUpperShadowBearish or C_BlackBody and (C_Body >= 0.45 * C_UpShadow or C_Body <= 0.55 * C_UpShadow)


// calculate weighting volume
iff_1 = is_Bearish_weak ? 1 - weak_volume_weighting_factor : neutral_volume_weighting_factor
iff_2 = is_Bullish_weak ? 1 + weak_volume_weighting_factor : iff_1
iff_3 = is_Bearish_strong ? 1 - strong_volume_weighting_factor : iff_2
iff_4 = is_Bullish_strong ? 1 + strong_volume_weighting_factor : iff_3
weight_bullish = is_Doji ? neutral_volume_weighting_factor : iff_4

iff_5 = is_Bearish_weak ? 1 + weak_volume_weighting_factor : neutral_volume_weighting_factor
iff_6 = is_Bullish_weak ? 1 - weak_volume_weighting_factor : iff_5
iff_7 = is_Bearish_strong ? 1 + strong_volume_weighting_factor : iff_6
iff_8 = is_Bullish_strong ? 1 - strong_volume_weighting_factor : iff_7
weight_bearish = is_Doji ? neutral_volume_weighting_factor : iff_8

volume_bullish = volume * weight_bullish
volume_bearish = volume * weight_bearish

bullish_sma = showTrend ? ta.sma(volume_bullish, trend_ma_length) : na
bearish_sma = showTrend ? ta.sma(volume_bearish, trend_ma_length) : na

// plot
blue = color.blue
green = color.green
red = color.red
light_green = #afd4ab
light_red = #e39e9c
neutral = color.gray

iff_9 = is_Bearish_weak ? light_red : neutral
iff_10 = is_Bullish_weak ? light_green : iff_9
iff_11 = is_Bearish_strong ? red : iff_10
iff_12 = is_Bullish_strong ? green : iff_11
palette = is_Doji ? blue : iff_12

original_color = close > open ? green : red

// plot volume bars
// 绘制成交量柱，透明度调整
volumeColor = showColor ? palette : original_color
plotVolumeColor = showColor ? color.new(volumeColor, 10) : color.new(original_color, 35)
plot(showVolume ? volume : na, title='Volume', color=plotVolumeColor, style=plot.style_columns)

// 绘制成交量趋势SMA，已正确使用color.new()
p1 = plot(bullish_sma, title='Bullish Volume Trend', linewidth=2, color=color.new(green, 0))
p2 = plot(bearish_sma, title='Bearish Volume Trend', linewidth=2, color=color.new(red, 0))

// 填充区域，透明度使用color.new()调整
fillColor = bullish_sma > bearish_sma ? color.new(green, 75) : color.new(red, 75)
fill(p1, p2, color=fillColor)

// 突出显示大成交量，透明度使用color.new()调整
is_large_volume = volume > 2.25 * ta.ema(volume, 14)
highlightColor = is_large_volume ? color.new(palette, 90) : na
bgcolor(highlightColor, title='Highlight Large Volume')

